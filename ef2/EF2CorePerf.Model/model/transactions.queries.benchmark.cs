using Microsoft.EntityFrameworkCore;
using System.Linq;
namespace transactions.sql
{
	public partial class txnTransactionsDBContext
	{
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites0 =>
			ShippingUnits
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites1 =>
			ShippingUnits
			.Include(c => c.EndReference)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites2 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites3 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites4 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites5 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites6 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites7 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites8 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites9 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites10 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites11 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites12 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites13 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites14 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites15 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites16 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites17 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites18 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites19 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites20 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites21 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites22 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites23 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites24 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites25 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites26 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites27 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites28 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites29 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites30 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites31 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites32 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites33 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites34 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites35 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites36 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites37 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites38 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites39 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites40 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites41 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites42 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites43 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites44 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites45 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.References)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites46 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.References)
			.ThenInclude(c => c.Text)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites47 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.References)
			.ThenInclude(c => c.Text)
			.Include(c => c.StartReference)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites48 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.References)
			.ThenInclude(c => c.Text)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Date)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites49 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.References)
			.ThenInclude(c => c.Text)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.StartReference)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites50 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.References)
			.ThenInclude(c => c.Text)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Entity)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites51 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.References)
			.ThenInclude(c => c.Text)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites52 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.References)
			.ThenInclude(c => c.Text)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.StartReference)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites53 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.References)
			.ThenInclude(c => c.Text)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Location)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites54 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.References)
			.ThenInclude(c => c.Text)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites55 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.References)
			.ThenInclude(c => c.Text)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites56 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.References)
			.ThenInclude(c => c.Text)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.StartReference)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites57 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.References)
			.ThenInclude(c => c.Text)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Location)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites58 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.References)
			.ThenInclude(c => c.Text)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites59 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.References)
			.ThenInclude(c => c.Text)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites60 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.References)
			.ThenInclude(c => c.Text)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.StartReference)
		;
		public IQueryable<txnShippingUnitDbEntity> ShippingUnitsWithComposites61 =>
			ShippingUnits
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.EndReference)
			.ThenInclude(c => c.Text)
			.Include(c => c.Identity)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Date)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.Receipent)
			.ThenInclude(c => c.Text)
			.Include(c => c.References)
			.ThenInclude(c => c.Date)
			.Include(c => c.References)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.References)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.References)
			.ThenInclude(c => c.Text)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Date)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Entity)
			.ThenInclude(c => c.Summary)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geographies)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Location)
			.ThenInclude(c => c.Spatial)
			.ThenInclude(c => c.Geometry)
			.Include(c => c.StartReference)
			.ThenInclude(c => c.Text)
		;
	} // end context
} // end ns
